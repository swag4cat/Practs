# Определяем компилятор
CXX = g++

# Определяем флаги компиляции
CXXFLAGS = -Wall -Wextra -std=c++11

# Исходный файл
SRC = main.cpp

# Промежуточные файлы
PREPROCESSED = main.i
ASSEMBLY = main.s
OBJECT = main.o

# Итоговый исполняемый файл
TARGET = main

# Правило по умолчанию (сборка всего проекта)
all: $(TARGET)

# Правило для препроцессинга
# Препроцессинг: обработка директив #include, #define и других макросов
$(PREPROCESSED): $(SRC)
	$(CXX) -E $(SRC) -o $(PREPROCESSED)
	@echo "Препроцессинг завершен. Результат сохранен в $(PREPROCESSED)."

# Правило для компиляции в ассемблерный код
# Компиляция: преобразование препроцессированного кода в ассемблерный код
$(ASSEMBLY): $(PREPROCESSED)
	$(CXX) -S $(PREPROCESSED) -o $(ASSEMBLY)
	@echo "Компиляция завершена. Результат сохранен в $(ASSEMBLY)."

# Правило для ассемблирования
# Ассемблирование: преобразование ассемблерного кода в объектный файл
$(OBJECT): $(ASSEMBLY)
	$(CXX) -c $(ASSEMBLY) -o $(OBJECT)
	@echo "Ассемблирование завершено. Результат сохранен в $(OBJECT)."

# Правило для линковки
# Линковка: связывание объектного файла с библиотеками и создание исполняемого файла
$(TARGET): $(OBJECT)
	$(CXX) $(OBJECT) -o $(TARGET) -static
	@echo "Линковка завершена. Исполняемый файл создан: $(TARGET)."

# Правило для запуска программы
run: $(TARGET)
	./$(TARGET)
	@echo "Программа запущена."

# Правило для очистки проекта (удаление всех сгенерированных файлов)
clean:
	rm -f $(PREPROCESSED) $(ASSEMBLY) $(OBJECT) $(TARGET)
	@echo "Очистка завершена. Все промежуточные и исполняемые файлы удалены."

# Флаг для предотвращения конфликтов с одноименными файлами
.PHONY: all run clean
